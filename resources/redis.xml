<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<context:property-placeholder location="classpath:redis.properties" />
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis_maxIdle}" /> <!-- 最大空闲连接数  -->
        <property name="maxTotal" value="${redis_maxTotal}" /> <!-- 最大连接数 -->
        <property name="maxWaitMillis" value="${redis_maxWait}" /><!-- 最大等待时间 -->
        <property name="testOnBorrow" value="${redis_testOnBorrow}" /> <!-- 当调用borrow Object方法时，是否进行有效性检查 -->
    </bean>
    <!--<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
          <!--p:hostName="${redis_addr}" p:port="${redis_port}" p:password="${redis_pwd}"-->
          <!--p:poolConfig-ref="jedisPoolConfig" p:database="${redis_db_index}" p:timeout="${redis_timeout}">-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
    p:hostName="${redis_addr}" p:port="${redis_port}"
    p:poolConfig-ref="jedisPoolConfig" p:database="${redis_db_index}" p:timeout="${redis_timeout}">
</bean>
<bean id="stringRedisSerializer"  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
<bean id="jdkRedisSerializer"  class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
  <property name="connectionFactory"   ref="connectionFactory" />
  <property name="keySerializer" ref="stringRedisSerializer" />
  <property name="hashKeySerializer" ref="stringRedisSerializer" />
  <property name="valueSerializer" ref="jdkRedisSerializer"/>
  <property name="enableTransactionSupport" value="true"/><!-- 配置true可以使用transactional控制事务，spring已经提供支持 -->
    </bean>
</beans>